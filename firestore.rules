rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      // Assumes user documents are in a 'users' collection and have a 'role' field.
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Users can view any profile, but only edit their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create, update: if request.auth.uid == userId;
    }

    // Goals can be read by any authenticated user, but only modified by admins.
    match /goals/{goalId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Tasks are sub-collections of goals. Access is inherited, but we can be more specific.
    // This assumes tasks are part of the goal document. If they were a subcollection:
    // match /goals/{goalId}/tasks/{taskId} {
    //   allow read: if request.auth != null;
    //   allow write: if isAdmin();
    // }

    // Rewards can be read by anyone, but only modified by admins.
    match /rewards/{rewardId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Messages can be read by anyone, created by any user, but only deleted by the author.
    match /messages/{messageId} {
      allow read: if request.auth != null;
      // User must be logged in and the message must be from them.
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      // Only the user who created the message can delete it.
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;
    }

  }
}
