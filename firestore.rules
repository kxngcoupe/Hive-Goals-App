
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an Admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can view profiles (for leaderboard, etc.)
      allow read: if request.auth != null;
      
      // A user can create their own document and can only update their own document.
      allow create, update: if request.auth.uid == userId;
    }

    // Rules for 'goals' and 'rewards'
    match /{collection}/{docId} 
    where collection in ['goals', 'rewards'] {
      // Any authenticated user can read goals and rewards
      allow read: if request.auth != null;
      
      // Only Admins can write (create, update, delete)
      allow write: if isAdmin();
    }
    
    // Rules for the 'messages' collection
    match /messages/{messageId} {
      // Any authenticated user can read messages
      allow read: if request.auth != null;

      // Any authenticated user can create a message
      allow create: if request.auth != null;

      // Users can only delete their own messages
      allow delete: if request.auth != null && resource.data.userId == request.auth.uid;

      // No updates to messages allowed to preserve history
      allow update: if false;
    }

    // Default deny all other reads/writes
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
